VAGRANTFILE_API_VERSION = "2"

$ansible_master = <<-'SCRIPT'
sudo chmod 400 .ssh/vagrant_rsa
sudo apt-get --assume-yes install python3-pip
sudo pip install --no-input ansible
su --login -c "ansible-playbook config.yml -i hosts.ini" vagrant
SCRIPT

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
# Use the same key for each machine
  config.ssh.insert_key = false
  config.ssh.private_key_path = ["keys/.ssh/vagrant_rsa", "~/.vagrant.d/insecure_private_key"]

  config.vm.define "gitvm" do |vm1|
    vm1.vm.box = "bento/ubuntu-20.04"
    vm1.vm.network "public_network", ip: "192.168.88.50"
    vm1.vm.hostname = "gitvm"
    vm1.vm.provision "file", source: "keys/.ssh/vagrant_rsa.pub", destination: "~/.ssh/authorized_keys"
    vm1.vm.provision "file", source: "keys/.ssh/vagrant_rsa", destination: "~/.ssh/id_rsa"
    vm1.vm.provider "virtualbox" do |vb|
      vb.name = "gitvm"
      vb.customize ["modifyvm", :id, "--memory", "512"]
      vb.customize ["modifyvm", :id, "--cpus", "1"]
    end
  end
  config.vm.define "jenkinsvm" do |vm2|
    vm2.vm.box = "bento/ubuntu-20.04"
    vm2.vm.network "public_network", ip: "192.168.88.51"
    vm2.vm.network "forwarded_port", guest: 8080, host: 8081
    vm2.vm.hostname = "jenkinsvm"
    vm2.vm.provision "file", source: "keys/.ssh/vagrant_rsa.pub", destination: "~/.ssh/authorized_keys"
    vm2.vm.provision "file", source: "keys/.ssh/vagrant_rsa", destination: "~/.ssh/id_rsa"
    vm2.vm.provider "virtualbox" do |vb|
      vb.name = "jenkinsvm"
      vb.customize ["modifyvm", :id, "--memory", "2048"]
      vb.customize ["modifyvm", :id, "--cpus", "1"]
    end
  end
  config.vm.define "prodvm" do |vm3|
    vm3.vm.box = "bento/ubuntu-20.04"
    vm3.vm.network "public_network", ip: "192.168.88.52"
    vm3.vm.network "forwarded_port", guest: 80, host: 8000
    vm3.vm.hostname = "prodvm"
    vm3.vm.provision "file", source: "keys/.ssh/vagrant_rsa.pub", destination: "~/.ssh/authorized_keys"
    vm3.vm.provider "virtualbox" do |vb|
      vb.name = "prodvm"
      vb.customize ["modifyvm", :id, "--memory", "1024"]
      vb.customize ["modifyvm", :id, "--cpus", "1"]
    end
  end
  config.vm.define "ansiblevm" do |vm4|
    vm4.vm.box = "bento/ubuntu-20.04"
    vm4.vm.network "public_network", ip: "192.168.88.53"
    vm4.vm.hostname = "ansiblevm"
    vm4.vm.provision "file", source: "keys/.ssh/vagrant_rsa.pub", destination: "~/.ssh/authorized_keys"
    vm4.vm.provider "virtualbox" do |vb|
      vb.name = "ansiblevm"
      vb.customize ["modifyvm", :id, "--memory", "1024"]
      vb.customize ["modifyvm", :id, "--cpus", "1"]
    end
    vm4.vm.provision "file", source: "keys/.ssh/vagrant_rsa", destination: "~/.ssh/vagrant_rsa"
    vm4.vm.provision "file", source: "ansible/config.yml", destination: "~/config.yml"
    vm4.vm.provision "file", source: "ansible/hosts.ini", destination: "~/hosts.ini"
    vm4.vm.provision "file", source: "ansible/.ansible.cfg", destination: "~/.ansible.cfg"
    vm4.vm.provision "file", source: "jencfg/.", destination: "~/jencfg/"
    vm4.vm.provision "shell", inline: $ansible_master
    # This option should be used if host machine supports Ansible
    # vm4.vm.provision "ansible", playbook: "config.yml", inventory_path: "hosts.ini", limit: "all" 
  end
end
